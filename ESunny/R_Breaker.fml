//------------------------------------------------------------------------
// 简称:R_Breaker
// 名称:R_Breaker
// 类别: 交易指令
// 类型: 用户应用
//------------------------------------------------------------------------
Params  	
	Numeric f1(0.35);
	Numeric f2(0.07);
	Numeric f3(0.25);
	Numeric realMinMov(1);//每跳变动量
	Numeric stopOpenTime(0.1430);//停止开仓时间
	Numeric getOutTime(0.1450);//强制离场时间
	Numeric tradeSlide(1);//滑点
	Numeric tradeBreak(1);//突破
	Numeric stopLose(30);
GlobalVars	
	NumericSeries bbreak(0);
	NumericSeries ssetup(0);
	NumericSeries senter(0);
	NumericSeries benter(0);
	NumericSeries bsetup(0);
	NumericSeries sbreak(0);
	Numeric hiToday(0);
	Numeric loToday(0);
	Bool buySet(False);
	Bool selSet(False);
	Numeric openPrice(0);
	Numeric closePrice(0);
	
RealInit	
	
	
Vars		
	Numeric slide(0);
	Numeric threshold(0);
Begin
	If (time < time[1])
	{
		hiToday = 0;
		loToday = 999999999;
	}
	if (High > hiToday)
	{
		hiToday = high;
	}
	if (low < loToday)
	{
		loToday = low;
	}
	ssetup = myHistoryHigh(1) + f1*(myHistoryClose(1) - myHistoryLow(1));
	senter = (1+f2)/2*(myHistoryHigh(1)+myHistoryLow(1)) - f2*myHistoryLow(1);
	benter = (1+f2)/2*(myHistoryHigh(1)+myHistoryLow(1)) - f2*myHistoryHigh(1);
	bsetup = myHistoryLow(1) - f1*(myHistoryHigh(1) - myHistoryClose(1));
	bbreak = ssetup + f3*(ssetup - bsetup);
	sbreak = bsetup - f3*(ssetup-bsetup);
	PlotNumeric("bbreak", bbreak, 0, Blue);
	PlotNumeric("ssetup", ssetup, 0, Cyan);
	PlotNumeric("senter", senter, 0, Green);
	PlotNumeric("benter", benter, 0, Yellow);
	PlotNumeric("bsetup", bsetup, 0, Red);
	PlotNumeric("sbreak", sbreak, 0, White);
	slide = tradeSlide * realMinMov;
	threshold = tradeBreak * realMinMov;
	
	if (MarketPosition == 0 and time < stopOpenTime)
	{
		if(low[1]<=bbreak and high[0]>bbreak)
		{
			openPrice = bbreak+threshold+slide;
			//buy(1, openPrice);
		}
		else if(high[1]>=sbreak and low[0]<sbreak)
		{
			openPrice = sbreak-threshold-slide;
			//SellShort(1, openPrice);
		}
	}
	if(MarketPosition != 1 and Time<stopOpenTime)
	{
		if(loToday>sbreak and loToday<bsetup 
		and low[1]<=benter and high[0]>benter)
		{
			openPrice = benter+threshold+slide;
			buy(1, openPrice);
		}
	}
	if(MarketPosition != -1 and time<stopOpenTime)
	{
		if(hiToday<bbreak and hiToday>ssetup
		and high[1]>=senter and low[0]<senter)
		{
			openPrice = senter - threshold - slide;
			SellShort(1, openPrice);
		}
	}
	myStopLose(openPrice, stopLose, slide, 1);
	myTimeOut(getOutTime, slide);
	
End

//------------------------------------------------------------------------
// 简称: myPriceOpiTrade
// 名称: PriceOpi
// 类别: 公式应用
// 类型: 用户应用
//------------------------------------------------------------------------

Params
	Numeric distance(10);//寻找局部高低点的最大距离
	Numeric minPriceVib(3);//价格波动阈值
	Numeric minOpiPosVib(500);//正向持仓波动阈值
	Numeric minOpiNegVib(-500);//负向持仓波动阈值
	Numeric stopWinSet(4);//止盈点
	Numeric stopLoseSet(4);//止损点
	Numeric forceOutTime(300);//如果这么多秒后还未离场，则强制平仓
Vars
	NumericSeries priceVibration(0);
	NumericSeries opiVibration(0);
	Numeric hiBar(0);
	Numeric hiVal(0);
	Numeric loBar(0);
	Numeric loVal(0);
	Numeric stopWin(0);
	Numeric stopLose(0);
Begin
	stopWin = GetGlobalVar(0);
	stopLose = GetGlobalVar(1);
	priceVibration = 0;
	OpiVibration = 0;
	loVal = LowestFC(close, distance);
	loBar = LowestBarFC(close, distance);
	hiVal = HighestFC(close, distance);
	hiBar = HighestBarFC(close, distance);
	if (Close>Close[1] && Close==hiVal)
	{
		if (Close - loVal >= minPriceVib*MinMove*PriceScale)
		{
			
			priceVibration = Close-Close[loBar];
			//opiVibration = OpenInt-OpenInt[loBar];
			OpiVibration = mySigmaSignedVol(loBar);
		}
	}
	
	if (Close<Close[1] && Close==loVal)
	{
		if (hiVal - Close >= minPriceVib*MinMove*PriceScale)
		{
			priceVibration = Close - Close[hiBar];
			//opiVibration = OpenInt-OpenInt[hiBar];
			OpiVibration = mySigmaSignedVol(hiBar);
		}
	}
	if(MarketPosition==0 and priceVibration[1]>0 and opiVibration[1]>minOpiPosVib and Close<Close[1])//买方吸入
	{
		Buy(1, Close);
		stopWin = stopWinSet;
		stopLose = stopLoseSet;
	}
	if(MarketPosition==0 and priceVibration[1]<0 and OpiVibration[1]<minOpiNegVib and Close>Close[1])//买方抛出
	{
		SellShort(1, Close);
		stopWin = IIF(stopWinSet>3, stopWinSet-1, stopWinSet);
		stopLose = IIF(stopLoseSet>3, stopLoseSet-1, stopLoseSet);
	}
	
	if(MarketPosition==0 and priceVibration[1]<0 and opiVibration[1]>minOpiPosVib and Close>Close[1])//卖方吸入
	{
		SellShort(1, Close);
		stopWin = stopWinSet;
		stopLose = stopLoseSet;
	}
	if(MarketPosition==0 and priceVibration[1]>0 and OpiVibration[1]<minOpiNegVib and Close<Close[1])//卖方抛出
	{
		Buy(1, Close);
		stopWin = IIF(stopWinSet>3, stopWinSet-1, stopWinSet);
		stopLose = IIF(stopLoseSet>3, stopLoseSet-1, stopLoseSet);
	}
	if(MarketPosition==1)
	{
		if(Close-EntryPrice>=stopWin*MinMove*PriceScale)
		{
			Sell(1, Close);
		}
		if(EntryPrice-Close>=stopLose*MinMove*PriceScale)
		{
			Sell(1, Close);
		}
		If(TimeDiff(EntryTime, Time)>forceOutTime)
		{
			Sell(1, Close);
		}
	}
	if(MarketPosition==-1)
	{
		if(EntryPrice-Close>=stopWin*MinMove*PriceScale)
		{
			BuyToCover(1, Close);
		}
		if(Close-EntryPrice>=stopLose*MinMove*PriceScale)
		{
			BuyToCover(1, Close);
		}
		If(TimeDiff(EntryTime, Time)>forceOutTime)
		{
			BuyToCover(1, Close);
		}
	}
	SetGlobalVar(0, stopWin);
	SetGlobalVar(1, stopLose);
End

//------------------------------------------------------------------------
// 编译版本	GS2010.12.08
// 用户版本	2014-03-22 10:34:08
// 版权所有	lott209
// 更改声明	TradeBlazer Software保留对TradeBlazer平台
//			每一版本的TrabeBlazer公式修改和重写的权利
//------------------------------------------------------------------------